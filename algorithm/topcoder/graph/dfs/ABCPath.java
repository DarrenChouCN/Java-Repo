package topcoder.graph.dfs;

import java.util.Arrays;

/*
ABCPath 

  You will be given a 2-dimensional grid of letters. Write a method to find the length of the longest path of consecutive letters, starting at 'A'. Paths can step from one letter in the grid to any adjacent letter (horizontally, vertically, or diagonally).

  For example, in the following grid, there are several paths from 'A' to 'D', but none from 'A' to 'E':

      { "ABE",
        "CFG",
        "BDH",
        "ABC" }
  One such path is:
      A B .
      C . .
      . D .
      . . .
      (spaces are for clarity only)
  so, for this grid, your method should return 4.
 */
public class ABCPath {

  int[] dx = { -1, 1, 0, 0, -1, -1, 1, 1 };
  int[] dy = { 0, 0, -1, 1, -1, 1, -1, 1 };

  int H, W;
  String[] grid;
  int[][] dp;

  public int length(String[] grid) {
    this.grid = grid;
    H = grid.length;
    W = grid[0].length();
    dp = new int[H][W];

    for (int[] row : dp)
      Arrays.fill(row, -1);

    int best = 0;
    for (int r = 0; r < H; r++)
      for (int c = 0; c < W; c++)
        if (grid[r].charAt(c) == 'A')
          best = Math.max(dfs(r, c), best);

    return best;
  }

  private int dfs(int r, int c) {
    if (dp[r][c] != -1)
      return dp[r][c];

    int best = 1;
    char cur = grid[r].charAt(c);
    char next = (char) (cur + 1);

    for (int dir = 0; dir < 8; dir++) {
      int nr = r + dx[dir];
      int nc = c + dy[dir];
      if (nr < 0 || nr >= H || nc < 0 || nc >= W)
        continue;

      if (grid[nr].charAt(nc) == next) {
        best = Math.max(best, 1 + dfs(nr, nc));
      }
    }
    return dp[r][c] = best;
  }

  public static void main(String[] args) {
    ABCPath path = new ABCPath();
    String[] grid = { "IRQPDNTCDIAUQYZTIHGYUSZZYWQRETCAWZYXUZXUNGBAVXYZZK",
        "XWOMVXVUFJKSVTSRIFZZTQOYXWBZUGDEKWXMPYWVLOWCWSETLZ", "CYVWYZTWYLOWUMDCJCYKVBXKZXVCDVGLIJLFZUHBZKXSDZRGYM",
        "ZDULZGSPXOMYHLEFKLMUTWAHAYDUEFZHJKCHTRPLYYUUTQGONV", "AQRUNQRRVMPQRSEUXTNSVOAGFPPSTYNQIJGDQSFQZTVOMQRMTU",
        "PWXYZVOUXJUWKDTTTYRIPMLKNOQWHOPDFFICPGHBCSLKLVSTNR", "TVTGSNUPZNVWVUXZZKJQHVJMNMKJIXCBGHFCAOIBAQRMWVUIDQ",
        "USFBIJWUYWWCXYWYXLQIOZHLWLCNFZWCKJZWVBQCZFZWXVUTEP", "VQRHKMTZXXRQZTZVOXJUWTEKXLABFGILAIYUCRJIEGVYFWGSBO",
        "WEPHLSCKYIGASRNMLKVTRMFBJTSRVUXMZHXVCRKLVUVXZHRONA", "ZXODKRQFHHHEDFHFMEOCQRAGCOIKZWZPVYZWUQPMFOSYEAQPFI",
        "YNNBJLPSRQXBZGEFDNBPSUQUONJLYRSUZYIQLTONKPWPVDVMHJ", "MJACNONYLOXTJJGJEBAEFTSVEKMZFKPTTFHDDHFLMAUXQALLKB",
        "LKBAHOGSXWULSNICIAABUZFIWLKYGELZPQETNSAIEBTRYIKKLG", "XZMAPCNLKQVHORIHDCAUYXNNJXAUJFCHXFHBKQGHDDHSGHJEDM",
        "UYSPQMWVQKYKWZQMFVSTZUYNLYVTKEEDXILMIHRBMEGFEGJBNU", "HROOZXKJUXYZJCSGUERSYXOZZRWEICIJVKNOGAELCNVMTAWORS",
        "JQDDSYDIWTXOFDYHOQRLWXTROUQXYHZUWZKPXTDDZYWUSEBTTQ", "PKGFEAPQHVJGEVLNPBPHGUSMLPMAZGYXTYQLZTSRYFXDIGYIUQ",
        "OBLIMBOFUQKHFJMMABSEGQRKKLABBDWIENMPVUQZRXZJZPZVJF", "DMQKHDEIRHJKEGCLKTDQFIJDJBBTCTEDZNOQOJKACYBWKLYKDU",
        "KJDRIACEROKONLYBTJCZMSOEDIABCWNJWSPSIHMPMAVKNFOXVK", "ZYXTSICENMJHPGZQPIBXQRPUHSCBDLMOVNVFGUQOCQPUYZYWSN",
        "HMWVKEZEXWUKLHWGHOMNLKWXYZKFEUJKWREUCRQUSUVZZZYZOR", "JVQTNVACFVXHMTFQYWYDOFVHIMNTGOKTJXEBVJVPTWYOXXYVDP",
        "ZYWPOSBXDFGNISMEXBAITUQDHTOSPHVJZYYAWNWLZXZVWVWRUO", "GXNOVPRMEEZJXRTDCWVBECBRXUYXWKKWIZGYXDYXYLAYNVSQPG",
        "MZXXVIQZJDKYYIRGZHGFDCAQIKPNOQJQOHFGZXZIEKPXZUTYXQ", "TJZYVJPAGEDLJSTFIHVYCNRHJZOMNRUPKCEDNPFBQCBROPLWZS",
        "UZVXMZCIHACMORBAEHEYZYMGDWYASTJIDAGCOMAEDGSLONWOVD", "VUTWYDLJIQUVDCDKCNDTXJFXYETZMLKGEAAEBABBFHZLMSUPFW",
        "XQSAIEMNPDRWXEMPQTSOUWVZNFDNHWVFIXJZHDVTLFKGCLHIVI", "ABZUHRVOYKSWAVYNPRSHSKUTGOOHCBXKIJYLACEWYKXJAKMUQP",
        "ILQOOQYRSXZTUWXZWRSDNTRZWRQPONZYGDMPYHORZURWDETNRA", "KNMRPTMORTOCAXHXIZTXMSMQYXQRMKNDYFOZVUPQXZMCABDBUW",
        "TOXZSWPNQSDVBYZQZYYUKIIHSCSEFOMQHEOWVYTLYIRBXZCEXV", "QUYRQVQIJDTEJQSXVCVDHDGVZXWDPJLUIKLMZTRXZZHSTVJXPY",
        "RFVPGJPYXCUHFPYWBBRIHLXVIULOBHIDJKLMSOQYGGAPUZYGNZ", "GIOYITSLJOPPQZJUWYSLQTYWLUPRNCAEUHJYNPMXRFUOCKFHUW",
        "HNMEPCURNQROMRCCXUZXZSZWQKGQDNAFGIGVRRYQWVTRNMNEFS", "AKGEDABXDMVUNBDSDVKJHWXYIJBCEBMILIWSUTPZYQNQSXLXWK",
        "BBWIXWUZLXWJGSEYEWZVUZYZYTDZXFGKJJJVQTSZXMPTVUMSUE", "BCDXWYZTGKYQGFJLZWIRWYMGFGKHGFJOZHSXUOIJWDUEZISMFC",
        "AEYUXRSJYUSHPOZYXYXSQXJNDEIXZQPYMTRZWVGHIVFWEYVGKA", "AZFGYRKZWVZILTUPRWRJOEKBMIJYYRPVXZZSUMFELYGFZWXLHJ",
        "ABIPQMSVXYACKMQTVIBCDYJLULKKXXUOWVPNNKDIZBXWIWMJII", "CDWLNTXJTDODWXNUAPQYZXAVCVULQSTNTWQMXOZJWYTVYSVUOR",
        "UEKGHYVJWSRNMXDBMNRAHGWPGFTPORHMLYDKLWPXORSUKVPOYQ", "TOFYZWYXYZQLVJEPXNMNZBCDIZONFHNAIEEHIUTPBSTLEJYNZP",
        "SPZGJKXPOMCRKHIYFGHJYXALEJTMKGOGHDACWSRAAIMZIFMWVU" };
    System.out.println(path.length(grid));
  }

}
